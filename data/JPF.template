@using=jpf-symbc
@using=jpf-nhandler

target={{package_name}}.{{class_name}}Wrapper
classpath=${config_path}/src
native_classpath =${config_path}/src

sourcepath=${config_path}/src
librarypath=${config_path}/{{native_lib}}
output=${config_path}

nhandler.delegateUnhandledNative = false
nhandler.spec.skip = android.os.SystemProperties.*,android.os.Handler.*,\
	 android.content.pm.PackageManager.*,android.app.Activity.<init>,\
	 java.io.File.getAbsolutePath, libcore.io.OsConstants.*,libcore.io.Posix.*,\
	 android.os.SystemProperties.*,android.os.Bundle.*,\
	 android.os.Build.*,org.apache.http.message.BasicNameValuePair.*,org.apache.http.client.*,\
	 org.apache.http.client.utils.URLEncodedUtils.*,org.apache.commons.logging.LogFactory.*,\
	 org.apache.http.client.entity.UrlEncodedFormEntity.*, java.nio.charset.Charset.*,\
	 org.apache.http.impl.client.DefaultHttpClient.*,org.apache.http.impl.client.AbstractHttpClient.*,\
	 org.apache.http.impl.client.BasicResponseHandler.*, android.util.Log.*, android.view.View.*, android.app.Activity.findViewById,\
	 org.apache.http.client.methods.HttpRequestBase.*, org.apache.http.client.methods.HttpPost.*,\
	 org.apache.http.client.methods.HttpPost.setEntity, org.apache.http.impl.client.BasicResponseHandler.handleResponse,\
	 android.widget.TextView.setText, android.app.Activity.*

nhandler.clean = false
{% if entry_point == 'onRequestPermissionsResult' %}
symbolic.method = {{package_name}}.{{class_name}}Wrapper.runRequest()
{% else %}
symbolic.method = {{package_name}}.{{class_name}}.{{entry_point}}({{sym_str}})
{% endif %}
symbolic.dp=choco
symbolic.debug=true
#symbolic.min_int=-100
#symbolic.max_int=100
#vm.storage.class=nil

############################### 4. Listener part #############################
#listener+=,.symbc.NativeListener
listener=.symbc.TaintListener